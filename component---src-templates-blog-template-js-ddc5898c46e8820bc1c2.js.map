{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js"],"names":["Template","data","commentBox","React","createRef","useEffect","console","log","scriptEl","document","createElement","async","src","setAttribute","current","appendChild","markdownRemark","frontmatter","html","className","title","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,kHAIe,SAASA,EAAT,GAEX,IADFC,EACC,EADDA,KAEMC,EAAaC,IAAMC,YAEzBC,qBAAU,WACRC,QAAQC,IAAI,aACZ,IAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAQ,EACjBH,EAASI,IAAM,gCACfJ,EAASK,aAAa,OAAQ,qBAC9BL,EAASK,aAAa,aAAc,SACpCL,EAASK,aAAa,KAAM,cAC5BL,EAASK,aAAa,QAAS,gBAC/BL,EAASK,aAAa,cAAe,aACjCX,GAAcA,EAAWY,QAC3BZ,EAAWY,QAAQC,YAAYP,IAE/BF,QAAQC,IAAI,CAACL,eACbI,QAAQC,IAAR,wCAAoDL,MAErD,IAnBF,IAoBOc,EAAmBf,EAAnBe,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,4BAAKF,EAAYG,OACjB,4BAAKH,EAAYI,MACjB,yBACEF,UAAU,oBACVG,wBAAyB,CAAEC,OAAQL,OAOtC,IAAMM,EAAS","file":"component---src-templates-blog-template-js-ddc5898c46e8820bc1c2.js","sourcesContent":["import React from 'react'\nimport {useRef, useEffect} from 'react'\nimport { graphql } from 'gatsby'\n//impor commo \nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const commentBox = React.createRef()\n\n  useEffect(() => {\n    console.log(\"chaugiang\")\n    const scriptEl = document.createElement('script')\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', 'bugb/aws.devt.net')\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('id', 'utterances')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    if (commentBox && commentBox.current) {\n      commentBox.current.appendChild(scriptEl)\n    } else {\n      console.log({commentBox})\n      console.log(`Error adding utterances comments on: ${commentBox}`)\n    }\n  }, [])\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <div className=\"blog-post-container\">\n      <div className=\"blog-post\">\n        <h1>{frontmatter.title}</h1>\n        <h2>{frontmatter.date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}